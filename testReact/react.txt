{ {} }

常用生命周期回调函数
render()：初始化渲染或更新渲染调用
componentDidMount() 开启监听，发送ajax（初始化异步操作）
componentWillUnmount() 做收尾工作，例如清楚定时器
componentWillReceiveProps () 在组件接收到一个新的 prop (更新后)时被调用。这个方法在初始化render时不会被调用。

回调函数使用箭头函数比较推荐，这样就可以不用bind，this指向问题
虚拟dom：减少dom操作，
diff：判断那块需要更新，那块不需新更改，减少更新区域，最小重绘

代码模板制作
import React,{Component} from 'react'
export default class App extends Component{

    render(){
        return(
            <div>
                
            </div>
        )
    }
}

www.bootcdn.cn //找cdn的地址



拆分组件

className=""
行内样式：style={{a：‘b’}}

axios,轻量级，推荐使用
Fetch，老版浏览器不支持，为了兼容，可以引入fetch.js
使用它 请求后，要。then（ return res.json()）.then
通过一次的res.json的转换，返回promise对象，才能拿到数据

//github接口地址
https://developer.github.com/v3/#   


发请求要在哪儿更新状态，就最好在哪个组件内发请求，操作state就方便一些

兄弟组件传值
兄弟传给父亲，父亲传给另一兄弟
在父组件写一个方法和设定state的值，设定好入参，把子组件内容传给父组件，赋值给父的state,
然后通过父把父的state的值，传递给另一个子组件

兄弟组件传值，使用消息订阅（subscribe）发布（publish）机制
消息订阅（subscribe）：绑定监听
发布（publish）机制   ： 触发事件，调用，用到按钮需要使用事件的时候使用

使用这个机制需要一个PubSub-js的库 地址 ：https://github.com/mroderick/PubSubJS

1:下载
npm install --save pubsub-js